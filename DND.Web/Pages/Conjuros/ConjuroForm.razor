@inject SweetAlertService sweetAlertService
<navigationlock onbeforeinternalnavigation="onbeforeinternalnavigation"></navigationlock>

<EditForm EditContext="editContext" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="container-fluid form-control form-create text-start">
        <div class="row">
            <div class="col-1"></div>
            <div class="col-10">
                <div>
                    <label for="@(() => Conjuro.Nombre)">Nombre</label>
                    <InputText class="form-control" @bind-Value="@Conjuro.Nombre" />
                    <ValidationMessage For="@(() => Conjuro.Nombre)" />
                </div>
                <label for="@(() => Conjuro.Nivel)">Nivel</label>
                <InputNumber class="form-control" @bind-Value="@Conjuro.Nivel" />
                <ValidationMessage For="@(() => Conjuro.Nivel)"></ValidationMessage>
                <div>
                    <label for="@(() => Conjuro.Escuela)">Escuela</label>
                    <InputText class="form-control" @bind-Value="@Conjuro.Escuela" />
                    <ValidationMessage For="@(() =>Conjuro.Escuela)" />
                </div>
                <div>
                    <label for=@(() => Conjuro.Descripcion)>Descripcion</label>
                    <InputText class="form-control" @bind-Value="@Conjuro.Descripcion" />
                    <ValidationMessage For="@(() => Conjuro.Descripcion)"></ValidationMessage>
                </div>
            </div>
            <br />
            <div class="col-1"></div>
            <div class="row m-3">
                <div class="col-6">
                    <button class="btn btn-princenton-orange" type="submit">Guardar Cambios</button>
                    <button class="btn btn-princenton-orange" @onclick="ReturnAction">Regresar</button>
                </div>
                <div class="col-6"></div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private EditContext editContext = null!;
    protected override void OnInitialized()
    {
        editContext = new(Conjuro);
    }

    [EditorRequired]
    [Parameter]
    public Conjuro Conjuro { get; set; } = null!;

    [EditorRequired]
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    [EditorRequired]
    [Parameter]
    public EventCallback ReturnAction { get; set; }

    public bool FormPostedSuccessfully { get; set; } = false;

    private async Task OnBeforeInternalNavigation(LocationChangingContext context)
    {
        var formWasEdited = editContext.IsModified();

        if (!formWasEdited)
        {
            return;
        }

        if (FormPostedSuccessfully)
        {
            return;
        }

        var result = await sweetAlertService.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmación",
                Text = "¿Deseas abandonar la página y perder los cambios?",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true
            });

        var confirm = !string.IsNullOrEmpty(result.Value);

        if (confirm)
        {
            return;
        }

        context.PreventNavigation();
    }

}


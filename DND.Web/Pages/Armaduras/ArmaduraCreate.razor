@page "/Armaduras/create"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService

<div class="container-fluid">
    <div class="row">
        <div class="col-12 text-center">
            <h1>Agregar nueva armadura</h1>
            <ArmaduraForm  @ref="armaduraForm" Armadura="armadura" OnValidSubmit="Create" ReturnAction="Return" />
        </div>
    </div>
</div>


@code {
    private Armadura armadura = new Armadura
        {
            Categoria = Armadura.Categorias[0],
            ClaseDeArmadura = Armadura.Bonificadores[0],
            BonDes = Armadura.Bonificadores[0],
            FalloArcano = Armadura.ArcaneFailure[0]
        };
    private ArmaduraForm? armaduraForm;

    private async Task Create()
    {
        var responseHttp = await repository.Post("/api/Armaduras", armadura);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message);
            return;
        }
        else
        {
            armaduraForm!.FormPostedSuccessfully = true;
            navigationManager.NavigateTo("Armaduras");
        }
;
    }

    private void Return()
    {
        navigationManager.NavigateTo("Armaduras");
    }
}

